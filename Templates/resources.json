{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "3093000913834766618"
    }
  },
  "parameters": {
    "functionEngineName": {
      "type": "string",
      "defaultValue": "func-blog-engine-we-prod-001"
    },
    "functionFrontendName": {
      "type": "string",
      "defaultValue": "func-blog-engine-we-prod-001"
    },
    "profileProperties": {
      "type": "object"
    },
    "endpointProperties": {
      "type": "object"
    },
    "aadClientId": {
      "type": "string"
    },
    "aadTenant": {
      "type": "string"
    },
    "cosmosDbisZoneRedundant": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "staticWebAppName": {
      "type": "string"
    }
  },
  "variables": {
    "appInsightName_var": "[replace(parameters('functionEngineName'), 'func', 'appi')]",
    "appPlanName_var": "[replace(parameters('functionEngineName'), 'func', 'plan')]",
    "storageNameWeb_var": "stblogstaticweprod001",
    "storageFunction_var": "stblogfuncweprod001",
    "cdnProfileName_var": "[replace(parameters('functionEngineName'), 'func', 'cdn')]",
    "cdnEndpointName": "[replace(parameters('functionFrontendName'), 'func', 'cdnedp')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2019-12-01-preview",
      "name": "[parameters('staticWebAppName')]",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "repositoryUrl": "https://github.com/jhueppauff/ServerlessBlog",
        "branch": "main",
        "buildProperties": {
          "appLocation": "EditorNG",
          "apiLocation": "",
          "appArtifactLocation": "wwwroot"
        }
      },
      "sku": {
        "tier": "Free",
        "name": "Free"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageNameWeb_var')]",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "supportsHttpsTrafficOnly": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/{1}', variables('storageNameWeb_var'), 'default')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "changeFeed": {
          "enabled": true
        },
        "restorePolicy": {
          "enabled": true,
          "days": 6
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "isVersioningEnabled": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameWeb_var'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageFunction_var')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {},
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "accountType": "Standard_LRS",
        "tier": "Standard",
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appPlanName_var')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('appPlanName_var')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[parameters('functionEngineName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName_var'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageFunction_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "AzureStorageConnection",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageNameWeb_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameWeb_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "CosmosDBConnection",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};TableEndpoint={2};', parameters('cosmosDbName'), listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2020-04-01').primaryMasterKey, reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))).tableEndpoint)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageFunction_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionEngineName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightName_var')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": 1
            },
            {
              "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
              "value": true
            },
            {
              "name": "AzureWebJobsDisableHomepage",
              "value": "true"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('appInsightName_var'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName_var'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameWeb_var'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2016-08-01",
      "name": "[format('{0}/{1}', parameters('functionEngineName'), 'authsettings')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabled": true,
        "unauthenticatedClientAction": "RedirectToLoginPage",
        "tokenStoreEnabled": true,
        "defaultProvider": "AzureActiveDirectory",
        "clientId": "[parameters('aadClientId')]",
        "issuer": "[format('https://sts.windows.net/{0}/', parameters('aadTenant'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionEngineName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[parameters('functionFrontendName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName_var'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageFunction_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "AzureStorageConnection",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageNameWeb_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageNameWeb_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "CosmosDBConnection",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};TableEndpoint={2};', parameters('cosmosDbName'), listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2020-04-01').primaryMasterKey, reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))).tableEndpoint)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageFunction_var'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionFrontendName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightName_var')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": 1
            },
            {
              "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
              "value": true
            },
            {
              "name": "AzureWebJobsDisableHomepage",
              "value": "true"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('appInsightName_var'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName_var'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageFunction_var'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameWeb_var'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2019-04-15",
      "name": "[variables('cdnProfileName_var')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_Microsoft"
      },
      "properties": "[parameters('profileProperties')]"
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2019-04-15",
      "name": "[format('{0}/{1}', variables('cdnProfileName_var'), variables('cdnEndpointName'))]",
      "location": "[resourceGroup().location]",
      "properties": "[parameters('endpointProperties')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName_var'))]"
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2014-08-01",
      "name": "[variables('appInsightName_var')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ApplicationId": "[variables('appInsightName_var')]",
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtension"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-04-01",
      "name": "[parameters('cosmosDbName')]",
      "kind": "GlobalDocumentDB",
      "location": "[resourceGroup().location]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[format('{0}-{1}', parameters('cosmosDbName'), resourceGroup().location)]",
            "failoverPriority": 0,
            "locationName": "[resourceGroup().location]",
            "isZoneRedundant": "[parameters('cosmosDbisZoneRedundant')]"
          }
        ],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 1440,
            "backupRetentionIntervalInHours": 48,
            "backupStorageRedundancy": "Local"
          }
        },
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "ipRules": [],
        "dependsOn": [],
        "enableMultipleWriteLocations": false,
        "capabilities": [
          {
            "name": "EnableTable"
          }
        ],
        "enableFreeTier": true
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/tables",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbName'), 'metadata')]",
      "properties": {
        "resource": {
          "id": "metadata"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/tables",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbName'), 'metrics')]",
      "properties": {
        "resource": {
          "id": "metrics"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]"
      ]
    }
  ]
}