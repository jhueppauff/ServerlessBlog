# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - main
  paths:
    include:
      - Templates/*

pr: none

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'blogEngine - GitHub'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

pool:
  vmImage: $(vmImageName)
  
steps:
  - task: CmdLine@2
    inputs:
      script: |
        export SONAR_SCANNER_VERSION=4.7.0.2747
        export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
        curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
        unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
        export PATH=$SONAR_SCANNER_HOME/bin:$PATH
        export SONAR_SCANNER_OPTS="-server"
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az bicep build --file $(Build.SourcesDirectory)/Templates/resources.bicep
        
  - task: CmdLine@2
    inputs:
      script: |
        sonar-scanner \
          -Dsonar.organization=jhueppauff \
          -Dsonar.projectKey=jhueppauff_ServerlessBlog \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io
          
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: '$(azureSubscription)'
      subscriptionId: '$(subscriptionId)'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'West Europe'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)/Templates/resources.json'
      csmParametersFile: '$(Build.SourcesDirectory)/Templates/resources.parameters.json'
      deploymentMode: 'Incremental'